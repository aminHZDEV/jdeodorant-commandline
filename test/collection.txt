org.jhotdraw.action.AbstractViewAction	[org.jhotdraw.action.AbstractViewAction::java.lang.String propertyName, org.jhotdraw.action.AbstractViewAction::setPropertyName(java.lang.String):void, org.jhotdraw.action.AbstractViewAction::updateView():void]
org.jhotdraw.action.AbstractViewAction	[org.jhotdraw.action.AbstractViewAction::java.beans.PropertyChangeListener viewListener, org.jhotdraw.action.AbstractViewAction::installViewListeners(org.jhotdraw.api.app.View):void, org.jhotdraw.action.AbstractViewAction::uninstallViewListeners(org.jhotdraw.api.app.View):void]
org.jhotdraw.app.osx.OSXPaletteHandler	[org.jhotdraw.app.osx.OSXPaletteHandler::java.util.HashMap<java.awt.Window,org.jhotdraw.api.app.View> windows, org.jhotdraw.app.osx.OSXPaletteHandler::java.awt.event.WindowFocusListener focusHandler, org.jhotdraw.app.osx.OSXPaletteHandler::add(java.awt.Window, org.jhotdraw.api.app.View):void, org.jhotdraw.app.osx.OSXPaletteHandler::remove(java.awt.Window):void, org.jhotdraw.app.osx.OSXPaletteHandler::addWindow(java.awt.Window):void, org.jhotdraw.app.osx.OSXPaletteHandler::removeWindow(java.awt.Window):void]
org.jhotdraw.app.osx.OSXPaletteHandler	[org.jhotdraw.app.osx.OSXPaletteHandler::java.util.HashSet<java.awt.Window> palettes, org.jhotdraw.app.osx.OSXPaletteHandler::getPalettes():java.util.Set<java.awt.Window>, org.jhotdraw.app.osx.OSXPaletteHandler::showPalettes():void]
org.jhotdraw.app.osx.OSXAdapter	[org.jhotdraw.app.osx.OSXAdapter::java.awt.event.ActionListener targetAction, org.jhotdraw.app.osx.OSXAdapter::callTarget(java.lang.Object):boolean, org.jhotdraw.app.osx.OSXAdapter::java.lang.Object targetObject, org.jhotdraw.app.osx.OSXAdapter::java.lang.reflect.Method targetMethod]
org.jhotdraw.app.MDIApplication	[org.jhotdraw.app.MDIApplication::org.jhotdraw.gui.JMDIDesktopPane desktopPane, org.jhotdraw.app.MDIApplication::createModelActionMap(org.jhotdraw.api.app.ApplicationModel):javax.swing.ActionMap, org.jhotdraw.app.MDIApplication::java.util.prefs.Preferences prefs, org.jhotdraw.app.MDIApplication::wrapDesktopPane(java.awt.Component, java.util.LinkedList<javax.swing.Action>):java.awt.Component]
org.jhotdraw.draw.AbstractDrawing	[org.jhotdraw.draw.AbstractDrawing::java.awt.geom.Rectangle2D.Double cachedBounds, org.jhotdraw.draw.AbstractDrawing::invalidate():void, org.jhotdraw.draw.AbstractDrawing::java.awt.geom.Rectangle2D.Double cachedDrawingArea]
org.jhotdraw.draw.constrainer.AbstractConstrainer	[org.jhotdraw.draw.constrainer.AbstractConstrainer::java.util.Set<org.jhotdraw.draw.constrainer.AbstractCoordinateConstrainerExtension> coordExtension, org.jhotdraw.draw.constrainer.AbstractConstrainer::clearCoordConstrainerExtensions():void, org.jhotdraw.draw.constrainer.AbstractConstrainer::removeCoordConstrainerExtension(org.jhotdraw.draw.constrainer.AbstractCoordinateConstrainerExtension):void, org.jhotdraw.draw.constrainer.AbstractConstrainer::getCoordConstrainerExtension(java.lang.Class<T>):T]
org.jhotdraw.draw.text.FloatingTextArea	[org.jhotdraw.draw.text.FloatingTextArea::javax.swing.JTextArea textArea, org.jhotdraw.draw.text.FloatingTextArea::requestFocus():void, org.jhotdraw.draw.text.FloatingTextArea::getText():java.lang.String, org.jhotdraw.draw.text.FloatingTextArea::getPreferredSize(int):java.awt.Dimension]
org.jhotdraw.draw.text.FloatingTextArea	[org.jhotdraw.draw.text.FloatingTextArea::javax.swing.JScrollPane editScrollContainer, org.jhotdraw.draw.text.FloatingTextArea::org.jhotdraw.draw.DrawingView view, org.jhotdraw.draw.text.FloatingTextArea::org.jhotdraw.draw.figure.TextHolderFigure editedFigure, org.jhotdraw.draw.text.FloatingTextArea::org.jhotdraw.draw.event.FigureListener figureHandler, org.jhotdraw.draw.text.FloatingTextArea::createOverlay(org.jhotdraw.draw.DrawingView, org.jhotdraw.draw.figure.TextHolderFigure):void, org.jhotdraw.draw.text.FloatingTextArea::endOverlay():void, org.jhotdraw.draw.text.FloatingTextArea::setBounds(java.awt.geom.Rectangle2D.Double, java.lang.String):void]
org.jhotdraw.draw.action.AbstractSelectedAction	[org.jhotdraw.draw.action.AbstractSelectedAction::getView():org.jhotdraw.draw.DrawingView, org.jhotdraw.draw.action.AbstractSelectedAction::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.draw.action.AbstractSelectedAction::fireUndoableEditHappened(javax.swing.undo.UndoableEdit):void]
org.jhotdraw.draw.tool.BezierTool	[org.jhotdraw.draw.tool.BezierTool::java.util.Map<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object> attributes, org.jhotdraw.draw.tool.BezierTool::org.jhotdraw.draw.figure.BezierFigure prototype, org.jhotdraw.draw.tool.BezierTool::createFigure():org.jhotdraw.draw.figure.BezierFigure]
org.jhotdraw.io.ImageOutputFormat	[org.jhotdraw.io.ImageOutputFormat::java.lang.String formatName, org.jhotdraw.io.ImageOutputFormat::write(java.io.OutputStream, org.jhotdraw.draw.Drawing, java.util.List<org.jhotdraw.draw.figure.Figure>, java.awt.geom.AffineTransform, java.awt.Dimension):void, org.jhotdraw.io.ImageOutputFormat::toImage(org.jhotdraw.draw.Drawing, java.util.List<org.jhotdraw.draw.figure.Figure>, double, boolean):java.awt.image.BufferedImage]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int[] pixels, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::generateImage():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int w, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int h, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::boolean isPixelsValid, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::needsGeneration():boolean, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::regenerateDiagram():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.OutsideGamutHandling outsideGamutHandling, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::toRGB(float[], float[]):void]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::java.awt.color.ColorSpace colorSpace, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::getColorLocation(java.awt.Color):java.awt.Point, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::getColorLocation(float[]):java.awt.Point]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int[] pixels, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::generateImage():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int w, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int h, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::boolean isPixelsValid, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::needsGeneration():boolean, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::regenerateDiagram():void]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int[] pixels, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::generateImage():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int w, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int h]
org.jhotdraw.gui.plaf.palette.PaletteToolBarUI	[org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::java.util.HashMap<javax.swing.AbstractButton,javax.swing.border.Border> borderTable, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::java.util.HashMap<javax.swing.AbstractButton,java.lang.Boolean> rolloverTable, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setBorderToNonRollover(java.awt.Component):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setBorderToNormal(java.awt.Component):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setBorderToRollover(java.awt.Component):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::installNonRolloverBorders(javax.swing.JComponent):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::installNormalBorders(javax.swing.JComponent):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::getRolloverBorder(javax.swing.AbstractButton):javax.swing.border.Border, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::installRolloverBorders(javax.swing.JComponent):void]
org.jhotdraw.gui.plaf.palette.PaletteToolBarUI	[org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::int floatingX, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::int floatingY, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setFloatingLocation(int, int):void]
org.jhotdraw.gui.JLifeFormattedTextArea	[org.jhotdraw.gui.JLifeFormattedTextArea::org.jhotdraw.gui.JLifeFormattedTextField formattedTextFieldAdapter, org.jhotdraw.gui.JLifeFormattedTextArea::setFormatterFactory(javax.swing.JFormattedTextField.AbstractFormatterFactory):void, org.jhotdraw.gui.JLifeFormattedTextArea::getFormatterFactory():javax.swing.JFormattedTextField.AbstractFormatterFactory]
org.jhotdraw.gui.JSheet	[org.jhotdraw.gui.JSheet::javax.swing.event.EventListenerList listenerList, org.jhotdraw.gui.JSheet::addSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::removeSheetListener(org.jhotdraw.gui.event.SheetListener):void]
org.jhotdraw.gui.JSheet	[org.jhotdraw.gui.JSheet::javax.swing.event.EventListenerList listenerList, org.jhotdraw.gui.JSheet::addSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::removeSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::fireOptionSelected(javax.swing.JOptionPane, int, java.lang.Object, java.lang.Object):void, org.jhotdraw.gui.JSheet::fireOptionSelected(javax.swing.JFileChooser, int):void, org.jhotdraw.gui.JSheet::fireOptionSelected(org.jhotdraw.api.gui.URIChooser, int):void]
org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel	[org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel::javax.swing.JTabbedPane tabbedPane, org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel::addColorChooserPanel(javax.swing.colorchooser.AbstractColorChooserPanel):void, org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel::removeAllColorChooserPanels():void]
org.jhotdraw.gui.JFontChooser	[org.jhotdraw.gui.JFontChooser::javax.swing.tree.TreePath selectionPath, org.jhotdraw.gui.JFontChooser::org.jhotdraw.gui.fontchooser.FontChooserModel model, org.jhotdraw.gui.JFontChooser::java.awt.Font selectedFont, org.jhotdraw.gui.JFontChooser::javax.swing.event.TreeModelListener modelHandler, org.jhotdraw.gui.JFontChooser::setModel(org.jhotdraw.gui.fontchooser.FontChooserModel):void, org.jhotdraw.gui.JFontChooser::setSelectedFont(java.awt.Font):void, org.jhotdraw.gui.JFontChooser::setSelectionPath(javax.swing.tree.TreePath):void, org.jhotdraw.gui.JFontChooser::updateSelectionPath(java.awt.Font):void]
org.jhotdraw.gui.JFontChooser	[org.jhotdraw.gui.JFontChooser::int returnValue, org.jhotdraw.gui.JFontChooser::javax.swing.JDialog dialog, org.jhotdraw.gui.JFontChooser::approveSelection():void, org.jhotdraw.gui.JFontChooser::cancelSelection():void, org.jhotdraw.gui.JFontChooser::fireActionPerformed(java.lang.String):void]
org.jhotdraw.gui.JActivityWindow	[org.jhotdraw.gui.JActivityWindow::org.jhotdraw.util.ResourceBundleUtil labels, org.jhotdraw.gui.JActivityWindow::javax.swing.JLabel infoLabel, org.jhotdraw.gui.JActivityWindow::javax.swing.JButton cancelAllButton, org.jhotdraw.gui.JActivityWindow::updateInfoPanel():void]
org.jhotdraw.gui.JActivityWindow	[org.jhotdraw.gui.JActivityWindow::javax.swing.JToggleButton disclosureToggle, org.jhotdraw.gui.JActivityWindow::javax.swing.JPanel viewPanel, org.jhotdraw.gui.JActivityWindow::disclosureStateChanged(java.awt.event.ItemEvent):void]
org.jhotdraw.gui.JActivityView	[org.jhotdraw.gui.JActivityView::javax.swing.JLabel errorLabel, org.jhotdraw.gui.JActivityView::updateError():void, org.jhotdraw.gui.JActivityView::updateLabelVisibility():void, org.jhotdraw.gui.JActivityView::javax.swing.JLabel warningLabel, org.jhotdraw.gui.JActivityView::updateWarning():void, org.jhotdraw.gui.JActivityView::javax.swing.JLabel noteLabel, org.jhotdraw.gui.JActivityView::updateNote():void]
org.jhotdraw.color.JColorWheel	[org.jhotdraw.color.JColorWheel::boolean isFlipX, org.jhotdraw.color.JColorWheel::setFlipX(boolean):void, org.jhotdraw.color.JColorWheel::boolean isFlipY, org.jhotdraw.color.JColorWheel::setFlipY(boolean):void, org.jhotdraw.color.JColorWheel::org.jhotdraw.color.JColorWheel.Type type, org.jhotdraw.color.JColorWheel::setType(org.jhotdraw.color.JColorWheel.Type):void]
org.jhotdraw.gui.plaf.palette.MultiIcon	[org.jhotdraw.gui.plaf.palette.MultiIcon::java.awt.Image tiledImage, org.jhotdraw.gui.plaf.palette.MultiIcon::int tileCount, org.jhotdraw.gui.plaf.palette.MultiIcon::boolean isTiledHorizontaly, org.jhotdraw.gui.plaf.palette.MultiIcon::generateIconsFromTiledImage():void]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::javax.swing.JSlider zoomSlider, org.jhotdraw.samples.mini.BezierDemo::getZoomFactor():double, org.jhotdraw.samples.mini.BezierDemo::getError():double, org.jhotdraw.samples.mini.BezierDemo::getSquaredError():double]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::java.util.ArrayList<org.jhotdraw.samples.mini.BezierDemo.Example> examples, org.jhotdraw.samples.mini.BezierDemo::eraseButtonActionPerformed(java.awt.event.ActionEvent):void, org.jhotdraw.samples.mini.BezierDemo::org.jhotdraw.samples.mini.BezierDemo.Canvas canvas, org.jhotdraw.samples.mini.BezierDemo::zoomChanged(javax.swing.event.ChangeEvent):void, org.jhotdraw.samples.mini.BezierDemo::checkboxPerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::org.jhotdraw.samples.mini.BezierDemo.Canvas canvas, org.jhotdraw.samples.mini.BezierDemo::zoomChanged(javax.swing.event.ChangeEvent):void, org.jhotdraw.samples.mini.BezierDemo::checkboxPerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::javax.swing.JDialog dumpDialog, org.jhotdraw.samples.mini.BezierDemo::dumpButtonActionPerformed(java.awt.event.ActionEvent):void, org.jhotdraw.samples.mini.BezierDemo::javax.swing.JTextArea dumpArea]
org.jhotdraw.samples.color.JMixer	[org.jhotdraw.samples.color.JMixer::javax.swing.JToggleButton disclosureButton, org.jhotdraw.samples.color.JMixer::javax.swing.JPanel mixerPanel, org.jhotdraw.samples.color.JMixer::mixerDisclosurePerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.color.WheelsAndSlidersMain	[org.jhotdraw.samples.color.WheelsAndSlidersMain::java.util.LinkedList<org.jhotdraw.color.ColorSliderModel> models, org.jhotdraw.samples.color.WheelsAndSlidersMain::org.jhotdraw.samples.color.WheelsAndSlidersMain.Handler handler, org.jhotdraw.samples.color.WheelsAndSlidersMain::createColorWheelChooser(java.awt.color.ColorSpace, int, int, int, org.jhotdraw.color.JColorWheel.Type, boolean, boolean):javax.swing.JPanel, org.jhotdraw.samples.color.WheelsAndSlidersMain::createSliderChooser(java.awt.color.ColorSpace, boolean):javax.swing.JPanel]
org.jhotdraw.samples.odg.io.ODGStylesReader	[org.jhotdraw.samples.odg.io.ODGStylesReader::readDefaultStyleElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readStyleElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readDrawingPagePropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readParagraphPropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readTextPropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readGraphicPropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::toLength(java.lang.String):double, org.jhotdraw.samples.odg.io.ODGStylesReader::toColor(java.lang.String):java.awt.Color]
org.jhotdraw.samples.odg.io.ODGStylesReader	[org.jhotdraw.samples.odg.io.ODGStylesReader::readGraphicPropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::toLength(java.lang.String):double, org.jhotdraw.samples.odg.io.ODGStylesReader::toColor(java.lang.String):java.awt.Color]
org.jhotdraw.samples.odg.io.ODGStylesReader	[org.jhotdraw.samples.odg.io.ODGStylesReader::readDefaultStyleElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readStyleElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readDrawingPagePropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readParagraphPropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readTextPropertiesElement(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void]
org.jhotdraw.samples.odg.io.ODGStylesReader	[org.jhotdraw.samples.odg.io.ODGStylesReader::readStylesChildren(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readLayerSetElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readListStyleElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readMarkerElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readMasterPageElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void, org.jhotdraw.samples.odg.io.ODGStylesReader::readPageLayoutElement(org.w3c.dom.Element, java.util.HashMap<java.lang.String,org.jhotdraw.samples.odg.io.ODGStylesReader.Style>):void]
org.jhotdraw.samples.odg.ODGPropertiesPanel	[org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.DrawingEditor editor, org.jhotdraw.samples.odg.ODGPropertiesPanel::setEditor(org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.odg.ODGPropertiesPanel::setView(org.jhotdraw.draw.DrawingView):void, org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.event.FigureAttributeEditorHandler<java.lang.Double> opacityFieldHandler, org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.event.FigureAttributeEditorHandler<java.lang.Double> opacitySliderHandler, org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.event.FigureAttributeEditorHandler<java.lang.String> linkFieldHandler]
org.jhotdraw.samples.svg.io.SVGInputFormat	[org.jhotdraw.samples.svg.io.SVGInputFormat::readTSpanElement(org.w3c.dom.Element, javax.swing.text.DefaultStyledDocument):void, org.jhotdraw.samples.svg.io.SVGInputFormat::readInheritAttribute(org.w3c.dom.Element, java.lang.String, java.lang.String):java.lang.String, org.jhotdraw.samples.svg.io.SVGInputFormat::readTextAttributes(org.w3c.dom.Element, java.util.Map<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.svg.io.SVGInputFormat::readTextFlowAttributes(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void, org.jhotdraw.samples.svg.io.SVGInputFormat::toColor(org.w3c.dom.Element, java.lang.String):java.awt.Color, org.jhotdraw.samples.svg.io.SVGInputFormat::toText(org.w3c.dom.Element, java.lang.String):java.lang.String]
org.jhotdraw.samples.svg.io.SVGInputFormat	[org.jhotdraw.samples.svg.io.SVGInputFormat::readAttribute(org.w3c.dom.Element, java.lang.String, java.lang.String):java.lang.String, org.jhotdraw.samples.svg.io.SVGInputFormat::toLength(org.w3c.dom.Element, java.lang.String, double):double, org.jhotdraw.samples.svg.io.SVGInputFormat::readTransformAttribute(org.w3c.dom.Element, java.util.HashMap<org.jhotdraw.draw.AttributeKey<?>,java.lang.Object>):void]
org.jhotdraw.samples.svg.SVGCreateFromFileTool	[org.jhotdraw.samples.svg.SVGCreateFromFileTool::java.awt.FileDialog fileDialog, org.jhotdraw.samples.svg.SVGCreateFromFileTool::getFileDialog():java.awt.FileDialog, org.jhotdraw.samples.svg.SVGCreateFromFileTool::setUseFileDialog(boolean):void, org.jhotdraw.samples.svg.SVGCreateFromFileTool::javax.swing.JFileChooser fileChooser, org.jhotdraw.samples.svg.SVGCreateFromFileTool::getFileChooser():javax.swing.JFileChooser, org.jhotdraw.samples.svg.SVGCreateFromFileTool::boolean useFileDialog]
org.jhotdraw.samples.svg.io.SVGOutputFormat	[org.jhotdraw.samples.svg.io.SVGOutputFormat::int nextId, org.jhotdraw.samples.svg.io.SVGOutputFormat::getId(org.w3c.dom.Element):java.lang.String, org.jhotdraw.samples.svg.io.SVGOutputFormat::java.util.HashMap<org.w3c.dom.Element,java.lang.String> identifiedElements, org.jhotdraw.samples.svg.io.SVGOutputFormat::initStorageContext(org.w3c.dom.Element):void, org.jhotdraw.samples.svg.io.SVGOutputFormat::java.util.HashMap<org.jhotdraw.samples.svg.Gradient,java.lang.String> gradientToIDMap]
org.jhotdraw.samples.draw.DrawingPanel	[org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.draw.DrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.draw.DrawingPanel::getDrawing():org.jhotdraw.draw.Drawing]
org.jhotdraw.samples.draw.DrawingPanel	[org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.draw.DrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.draw.DrawingPanel::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.draw.DrawingPanel::initComponents():void]
org.jhotdraw.samples.net.NetPanel	[org.jhotdraw.samples.net.NetPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.net.NetPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.net.NetPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.net.NetPanel::getDrawing():org.jhotdraw.draw.Drawing]
org.jhotdraw.samples.net.NetPanel	[org.jhotdraw.samples.net.NetPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.net.NetPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.net.NetPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.net.NetPanel::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.net.NetPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.net.NetPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.net.NetPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.net.NetPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.net.NetPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.net.NetPanel::initComponents():void]
org.jhotdraw.samples.odg.ODGApplicationModel	[org.jhotdraw.samples.odg.ODGApplicationModel::addAttributesButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.odg.ODGApplicationModel::addColorButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.odg.ODGApplicationModel::addStrokeButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void]
org.jhotdraw.samples.odg.ODGDrawingPanel	[org.jhotdraw.samples.odg.ODGDrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.odg.ODGDrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.odg.ODGDrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.odg.ODGDrawingPanel::getDrawing():org.jhotdraw.draw.Drawing]
org.jhotdraw.samples.odg.ODGDrawingPanel	[org.jhotdraw.samples.odg.ODGDrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.odg.ODGDrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.odg.ODGDrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.odg.ODGDrawingPanel::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.odg.ODGDrawingPanel::initComponents():void]
org.jhotdraw.samples.pert.PertPanel	[org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.pert.PertPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.pert.PertPanel::getDrawing():org.jhotdraw.draw.Drawing]
org.jhotdraw.samples.pert.PertPanel	[org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.pert.PertPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.pert.PertPanel::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.pert.PertPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.pert.PertPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.pert.PertPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.pert.PertPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.pert.PertPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.pert.PertPanel::initComponents():void]
org.jhotdraw.samples.svg.SVGDrawingPanel	[org.jhotdraw.samples.svg.SVGDrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.svg.SVGDrawingPanel::setUndoRedoManager(org.jhotdraw.undo.UndoRedoManager):void, org.jhotdraw.samples.svg.SVGDrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void, org.jhotdraw.samples.svg.SVGDrawingPanel::org.jhotdraw.draw.DefaultDrawingView view]
org.jhotdraw.samples.svg.SVGDrawingPanel	[org.jhotdraw.samples.svg.SVGDrawingPanel::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.svg.SVGDrawingPanel::write(java.net.URI):void, org.jhotdraw.samples.svg.SVGDrawingPanel::write(java.net.URI, org.jhotdraw.draw.io.OutputFormat):void]
org.jhotdraw.samples.svg.SVGDrawingPanel	[org.jhotdraw.samples.svg.SVGDrawingPanel::createDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.svg.SVGDrawingPanel::read(java.net.URI):void, org.jhotdraw.samples.svg.SVGDrawingPanel::read(java.net.URI, org.jhotdraw.draw.io.InputFormat):void]
org.jhotdraw.samples.svg.gui.ActionsToolBar	[org.jhotdraw.samples.svg.gui.ActionsToolBar::java.util.ArrayList<javax.swing.Action> actions, org.jhotdraw.samples.svg.gui.ActionsToolBar::setPopupActions(java.util.List<javax.swing.Action>):void, org.jhotdraw.samples.svg.gui.ActionsToolBar::getPopupActions():java.util.List<javax.swing.Action>]
org.jhotdraw.samples.svg.gui.MessagePanel	[org.jhotdraw.samples.svg.gui.MessagePanel::javax.swing.event.EventListenerList listeners, org.jhotdraw.samples.svg.gui.MessagePanel::addActionListener(java.awt.event.ActionListener):void, org.jhotdraw.samples.svg.gui.MessagePanel::removeActionListener(java.awt.event.ActionListener):void, org.jhotdraw.samples.svg.gui.MessagePanel::closePerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.svg.gui.ProgressIndicator	[org.jhotdraw.samples.svg.gui.ProgressIndicator::javax.swing.BoundedRangeModel progressModel, org.jhotdraw.samples.svg.gui.ProgressIndicator::getMinimum():int, org.jhotdraw.samples.svg.gui.ProgressIndicator::setMinimum(int):void, org.jhotdraw.samples.svg.gui.ProgressIndicator::setProgress(int):void, org.jhotdraw.samples.svg.gui.ProgressIndicator::getMaximum():int, org.jhotdraw.samples.svg.gui.ProgressIndicator::setMaximum(int):void]
org.jhotdraw.samples.teddy.CharacterSetAccessory	[org.jhotdraw.samples.teddy.CharacterSetAccessory::javax.swing.JComboBox charSetCombo, org.jhotdraw.samples.teddy.CharacterSetAccessory::fetchAvailableCharSets():void, org.jhotdraw.samples.teddy.CharacterSetAccessory::getCharacterSet():java.lang.String, org.jhotdraw.samples.teddy.CharacterSetAccessory::getLineSeparator():java.lang.String]
org.jhotdraw.samples.teddy.FindDialog	[org.jhotdraw.samples.teddy.FindDialog::org.jhotdraw.api.app.Application app, org.jhotdraw.samples.teddy.FindDialog::org.jhotdraw.samples.teddy.regex.Matcher matcher, org.jhotdraw.samples.teddy.FindDialog::javax.swing.JCheckBox wrapAroundCheck, org.jhotdraw.samples.teddy.FindDialog::javax.swing.JTextArea replaceField, org.jhotdraw.samples.teddy.FindDialog::java.util.prefs.Preferences prefs, org.jhotdraw.samples.teddy.FindDialog::modeChanged(java.awt.event.ItemEvent):void, org.jhotdraw.samples.teddy.FindDialog::javax.swing.JTextArea findField, org.jhotdraw.samples.teddy.FindDialog::javax.swing.JCheckBox ignoreCaseCheck, org.jhotdraw.samples.teddy.FindDialog::javax.swing.JComboBox modeCombo, org.jhotdraw.samples.teddy.FindDialog::wrapAroundPerformed(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::ignoreCasePerformed(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::replace(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::replaceAndFind(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::previous(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::next(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::replaceAll(java.awt.event.ActionEvent):void, org.jhotdraw.samples.teddy.FindDialog::updateMatcher():void]
org.jhotdraw.samples.svg.io.ImageMapOutputFormat	[org.jhotdraw.samples.svg.io.ImageMapOutputFormat::java.awt.geom.AffineTransform drawingTransform, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::java.awt.Rectangle bounds, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writeCircleAttributes(org.w3c.dom.Element, org.jhotdraw.samples.svg.figures.SVGFigure, java.awt.geom.Ellipse2D.Double):boolean, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writePolyAttributes(org.w3c.dom.Element, org.jhotdraw.samples.svg.figures.SVGFigure, java.awt.Shape):boolean, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writeRectAttributes(org.w3c.dom.Element, org.jhotdraw.samples.svg.figures.SVGFigure, java.awt.geom.Rectangle2D.Double):boolean]
org.jhotdraw.samples.teddy.regex.Matcher	[org.jhotdraw.samples.teddy.regex.Matcher::javax.swing.text.Document document, org.jhotdraw.samples.teddy.regex.Matcher::isWordChar(int):boolean, org.jhotdraw.samples.teddy.regex.Matcher::org.jhotdraw.samples.teddy.regex.MatchType matchType, org.jhotdraw.samples.teddy.regex.Matcher::char[] matchLowerCase, org.jhotdraw.samples.teddy.regex.Matcher::char[] matchUpperCase, org.jhotdraw.samples.teddy.regex.Matcher::isMatchCase():boolean, org.jhotdraw.samples.teddy.regex.Matcher::findNext():int, org.jhotdraw.samples.teddy.regex.Matcher::findPrevious():int]
org.jhotdraw.samples.odg.io.ODGInputFormat	[org.jhotdraw.samples.odg.io.ODGInputFormat::java.util.LinkedList<org.jhotdraw.draw.figure.Figure> figures, org.jhotdraw.samples.odg.io.ODGInputFormat::readPageElement(org.w3c.dom.Element):void, org.jhotdraw.samples.odg.io.ODGInputFormat::org.w3c.dom.Document document, org.jhotdraw.samples.odg.io.ODGInputFormat::readFiguresFromDocumentContent(java.io.InputStream, org.jhotdraw.draw.Drawing, boolean):void, org.jhotdraw.samples.odg.io.ODGInputFormat::readDrawingElement(org.w3c.dom.Element):void]
org.jhotdraw.formatter.JavaNumberFormatter	[org.jhotdraw.formatter.JavaNumberFormatter::java.text.DecimalFormat decimalFormat, org.jhotdraw.formatter.JavaNumberFormatter::java.text.DecimalFormat scientificFormat, org.jhotdraw.formatter.JavaNumberFormatter::int minIntDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMinimumIntegerDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::initFormats():void, org.jhotdraw.formatter.JavaNumberFormatter::int maxIntDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMaximumIntegerDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::int maxFractionDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMaximumFractionDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::int minFractionDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMinimumFractionDigits(int):void]
org.jhotdraw.formatter.JavaNumberFormatter	[org.jhotdraw.formatter.JavaNumberFormatter::java.text.DecimalFormat decimalFormat, org.jhotdraw.formatter.JavaNumberFormatter::java.text.DecimalFormat scientificFormat, org.jhotdraw.formatter.JavaNumberFormatter::int minIntDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMinimumIntegerDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::initFormats():void, org.jhotdraw.formatter.JavaNumberFormatter::int maxIntDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMaximumIntegerDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::int maxFractionDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMaximumFractionDigits(int):void]
org.jhotdraw.formatter.JavaNumberFormatter	[org.jhotdraw.formatter.JavaNumberFormatter::int minIntDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMinimumIntegerDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::initFormats():void, org.jhotdraw.formatter.JavaNumberFormatter::int maxIntDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMaximumIntegerDigits(int):void, org.jhotdraw.formatter.JavaNumberFormatter::int maxFractionDigits, org.jhotdraw.formatter.JavaNumberFormatter::setMaximumFractionDigits(int):void]
org.jhotdraw.net.ClientHttpRequest	[org.jhotdraw.net.ClientHttpRequest::java.net.URLConnection connection, org.jhotdraw.net.ClientHttpRequest::java.io.OutputStream os, org.jhotdraw.net.ClientHttpRequest::write(char):void, org.jhotdraw.net.ClientHttpRequest::connect():void, org.jhotdraw.net.ClientHttpRequest::write(java.lang.String):void, org.jhotdraw.net.ClientHttpRequest::newline():void, org.jhotdraw.net.ClientHttpRequest::writeln(java.lang.String):void]
org.jhotdraw.net.ClientHttpRequest	[org.jhotdraw.net.ClientHttpRequest::java.util.Map<java.lang.String,java.lang.String> cookies, org.jhotdraw.net.ClientHttpRequest::setCookie(java.lang.String, java.lang.String):void, org.jhotdraw.net.ClientHttpRequest::setCookies(java.util.Map<java.lang.String,java.lang.String>):void]
org.jhotdraw.net.ClientHttpRequest	[org.jhotdraw.net.ClientHttpRequest::java.io.OutputStream os, org.jhotdraw.net.ClientHttpRequest::write(char):void, org.jhotdraw.net.ClientHttpRequest::connect():void, org.jhotdraw.net.ClientHttpRequest::write(java.lang.String):void]
org.jhotdraw.io.StreamPosTokenizer	[org.jhotdraw.io.StreamPosTokenizer::java.io.Reader reader, org.jhotdraw.io.StreamPosTokenizer::int readpos, org.jhotdraw.io.StreamPosTokenizer::java.util.List<java.lang.Integer> unread, org.jhotdraw.io.StreamPosTokenizer::read():int, org.jhotdraw.io.StreamPosTokenizer::unread(int):void]
org.jhotdraw.io.StreamPosTokenizer	[org.jhotdraw.io.StreamPosTokenizer::char[] slashStar, org.jhotdraw.io.StreamPosTokenizer::char[] starSlash, org.jhotdraw.io.StreamPosTokenizer::setSlashStarTokens(java.lang.String, java.lang.String):void]
org.jhotdraw.formatter.FontFormatter	[org.jhotdraw.formatter.FontFormatter::java.util.HashMap<java.lang.String,java.awt.Font> genericFontFamilies, org.jhotdraw.formatter.FontFormatter::clearGenericFontFamilies():void, org.jhotdraw.formatter.FontFormatter::putGenericFontFamily(java.lang.String, java.awt.Font):void]
org.jhotdraw.undo.UndoRedoManager	[org.jhotdraw.undo.UndoRedoManager::java.beans.PropertyChangeSupport propertySupport, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, boolean, boolean):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, int, int):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):void]
org.jhotdraw.geom.path.BezierPath	[org.jhotdraw.geom.path.BezierPath::java.awt.geom.Rectangle2D.Double bounds, org.jhotdraw.geom.path.BezierPath::invalidatePath():void, org.jhotdraw.geom.path.BezierPath::int outer]
org.jhotdraw.xml.css.CSSRule	[org.jhotdraw.xml.css.CSSRule::java.lang.String selector, org.jhotdraw.xml.css.CSSRule::org.jhotdraw.xml.css.CSSRule.SelectorType type, org.jhotdraw.xml.css.CSSRule::setSelector(java.lang.String):void, org.jhotdraw.xml.css.CSSRule::matches(org.w3c.dom.Element):boolean]
org.jhotdraw.xml.css.CSSRule	[org.jhotdraw.xml.css.CSSRule::java.lang.String selector, org.jhotdraw.xml.css.CSSRule::org.jhotdraw.xml.css.CSSRule.SelectorType type, org.jhotdraw.xml.css.CSSRule::setSelector(java.lang.String):void, org.jhotdraw.xml.css.CSSRule::matches(org.w3c.dom.Element):boolean]


